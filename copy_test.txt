f = open("complete.py", "w")
launch_l_list = []

launch_l_list.append(['IGNORE', 0, "from launch import LaunchDescription"])
launch_l_list.append(['IGNORE', 0, "from launch_ros.actions import Node"])
launch_l_list.append(['IGNORE', 0, "import ament_index_python"])
launch_l_list.append(['IGNORE', 0, "#this launch gathers all of the packages and their nodes required to launch a simulated version of the robot in rviz"])
launch_l_list.append(['IGNORE', 0, "
"])
launch_l_list.append(['IGNORE', 0, "#output means output goes to terminal that executed this launch file"])
launch_l_list.append(['IGNORE', 0, "
"])
launch_l_list.append(['IGNORE', 0, "package_name = "model_pkg""])
launch_l_list.append(['IGNORE', 0, "def generate_launch_description():"])
\
    launch_l_list.append(['IGNORE', 1, ""])
\
    launch_l_list.append(['IGNORE', 1, "return LaunchDescription(["])
\
        launch_l_list.append(['IGNORE', 2, "Node("])
\
            launch_l_list.append(['IGNORE', 3, "package=package_name,"])
\
            launch_l_list.append(['IGNORE', 3, "executable='model',"])
\
            launch_l_list.append(['IGNORE', 3, "output="screen","])
\
            launch_l_list.append(['IGNORE', 3, "parameters=[],"])
\
        launch_l_list.append(['IGNORE', 2, "),"])
\
        launch_l_list.append(['IGNORE', 2, "Node("])
\
            launch_l_list.append(['IGNORE', 3, "package="rviz2","])
\
            launch_l_list.append(['IGNORE', 3, "executable='rviz2',"])
\
            launch_l_list.append(['IGNORE', 3, "output="screen","])
\
            launch_l_list.append(['IGNORE', 3, "arguments=["-d", "%s/rviz/rviz_config_test.rviz" % ament_index_python.packages.get_package_share_directory(package_name)],"])
\
        launch_l_list.append(['IGNORE', 2, "),"])
\
        launch_l_list.append(['IGNORE', 2, "Node("])
\
            launch_l_list.append(['IGNORE', 3, "package="rqt_gui","])
\
            launch_l_list.append(['IGNORE', 3, "executable="rqt_gui","])
\
            launch_l_list.append(['IGNORE', 3, "output="screen","])
\
            launch_l_list.append(['IGNORE', 3, "parameters=[]"])
\
        launch_l_list.append(['IGNORE', 2, ")"])
\
    launch_l_list.append(['IGNORE', 1, "])"])


f = open('sim_launch.py', 'r')
f_lines = f.readlines()
f.close()
f = open('sim_launch.py', 'w')
tab = "    "
for i in range(0, launch_l_list.__len__()):
    l =  launch_l_list[i]
    if(l[0] == 'IGNORE'):
        f.write(f_lines[i])
    elif(l[0] == 'WRITE'):
        f.write((tab * l[1]) + l[2] + "\n")
    else:
        print('WARNING: Expected 'IGNORE' or 'WRITE', got ' + l[0] + 'treating as 'IGNORE'')
        f.write(f_lines[i])